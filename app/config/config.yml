imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        name: similarseries_session
        # Move sessions outside cache directory to prevent users from being logged out between deploys
        save_path: "%kernel.root_dir%/sessions/"
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    globals:
        google_analytics_id: %google.analytics.id%
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ SunnerbergSimilarSeriesBundle ]
    filters:
        cssrewrite:
            apply_to: "\.less$"
        lessphp:
            apply_to: "\.less$"
            paths:
                - "%kernel.root_dir%/../web"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

tmdb_symfony:
    api_key: %tmdb_api_key%
    options:
        adapter: null
        secure: true # Set to false to disable https
        host: "api.themoviedb.org/3/"
        session_token: null
        cache:
            enabled: true
            handler: tmdb_cache
        log:
            enabled: false # Set to true to enable log
            path: "%kernel.logs_dir%/themoviedb.log"
            level: DEBUG
            handler: null
            subscriber: null

doctrine_cache:
    providers:
        tmdb_cache:
            file_system:
                directory: %kernel.root_dir%/cache/tmdb

old_sound_rabbit_mq:
    connections:
        default:
            host:     '%rabbit_mq_host%'
            port:     5672
            user:     '%rabbit_mq_user%'
            password: '%rabbit_mq_password%'
            vhost:    '/'
            lazy:     true
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0
    producers:
        show_patcher:
            connection:       default
            exchange_options: { name: 'show_patcher', type: direct }
        show_fetcher:
            connection:       default
            exchange_options: { name: 'show_fetcher', type: direct }
    consumers:
        show_patcher:
            connection:       default
            exchange_options: { name: 'show_patcher', type: direct }
            queue_options:    { name: 'show_patcher' }
            callback:         sunnerberg_similar_series.patcher.show_patcher
        show_fetcher:
            connection:       default
            exchange_options: { name: 'show_fetcher', type: direct }
            queue_options:    { name: 'show_fetcher' }
            callback:         sunnerberg_similar_series.fetcher.show_fetcher_consumer

stof_doctrine_extensions:
    default_locale: en
    translation_fallback: true
    orm:
        default:
            sluggable: true
